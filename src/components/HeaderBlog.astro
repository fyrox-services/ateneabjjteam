---
import { transformDate } from "@/helpers/transformDate";
import { Image } from "astro:assets";
import aitana from "@/assets/authors/aitana-autor.jpg";
import renzo from "@/assets/authors/renzo-autor.jpg";
import type { CollectionEntry } from "astro:content";
import Date from "./icons/Date.astro";
import Clock from "./icons/Clock.astro";
import Arrow from "./icons/Arrow.astro";

interface Props {
  post: CollectionEntry<"posts">;
}

const { post } = Astro.props;
const { data } = post;
const srcImg = data.author.name === "Renzo Mart√≠nez" ? renzo : aitana;

const structuredData = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Inicio",
      item: "https://ateneabjjteam.com",
    },
    {
      "@type": "ListItem",
      position: 2,
      name: "Blog",
      item: "https://ateneabjjteam.com/es/blog",
    },
    {
      "@type": "ListItem",
      position: 3,
      name: data.h1,
      // TODO: revisar esto en pro
      item: Astro.url,
    },
  ],
};
---

<header class="data-post">
  <nav class="bread-crumbs">
    <a href="/">
      Inicio
      <Arrow class="right" size={20} />
    </a>
    <a href="/es/blog/">
      Blog
      <Arrow class="right" size={20} />
    </a>

    <span>{data.h1}</span>
  </nav>
  <div class="author-wrap">
    <Image
      width={112}
      loading="eager"
      class="photo-profile"
      src={srcImg}
      alt="autor"
      format="webp"
    />
    <div>
      <span class="author-name">{data.author.name}</span>
      <span class="belt">{data.author.belt}</span>
    </div>
  </div>

  <div class="bot-wrap">
    <time class="date">
      <Date size={20} />
      {transformDate(data.datePublished)}
    </time>
    <span class="reading-time">
      <Clock size={20} />
      {data.readingTime} min de lectura
    </span>
  </div>
</header>

<script
  is:inline
  type="application/ld+json"
  set:html={JSON.stringify(structuredData)}
/>

<style>
  .data-post {
    background-color: var(--white);
    min-height: 10rem;
    width: 90%;
    margin-inline: auto;
    position: absolute;
    bottom: 0;
    right: 0;
    left: 0;
    transform: translateY(90%);
    z-index: 2;
    display: flex;
    justify-content: space-between;
    flex-direction: column;
    gap: 1rem;
    padding: 2rem 1rem 1rem;
    border-bottom: 1px dashed var(--gray);
  }

  .reading-time,
  .date {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .author-wrap {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .author-wrap div {
    display: flex;
    flex-direction: column;
  }

  .author-name {
    font-family: var(--ff-base-bold);
    font-size: var(--fs-md);
  }

  .belt,
  .date,
  .reading-time {
    font-size: var(--fs-sm);
    color: var(--dark-500);
  }

  .photo-profile {
    max-width: 4.5rem;
    border-radius: var(--radius-full);
  }

  .bot-wrap {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .bread-crumbs {
    position: absolute;
    top: 0;
    left: 0;
    transform: translateY(-100%);
    background-color: var(--black);
    font-size: var(--fs-sm);
    width: 100%;
    padding: 0.5rem 1rem;
    border-radius: var(--radius) var(--radius) 0 0;
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .bread-crumbs a {
    color: var(--third);
    min-width: 48px;
    min-height: 48px;
    display: grid;
    align-items: center;
    grid-template-columns: 1fr auto;
  }

  .bread-crumbs span {
    color: var(--white);
  }

  /* DESKTOP */

  @media (min-width: 1024px) {
    .data-post {
      align-items: center;
      flex-direction: row;
      padding: 2rem;
    }

    .author-name {
      font-size: var(--fs-base);
    }

    .belt {
      font-size: var(--fs-md);
    }

    .bot-wrap {
      gap: 2rem;
      flex-direction: column;
    }

    .bread-crumbs {
      font-size: var(--fs-md);
      justify-content: center;
    }
  }
</style>
