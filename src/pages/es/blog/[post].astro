---
import Layout from "@/layouts/Layout.astro";
import PostLayout from "@/layouts/PostLayout.astro";
import { getCollection, render } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  return posts.map((post) => {
    const cleanSlug = post.slug.split("/")[1];

    const params = {
      post: cleanSlug,
    };

    const props = {
      post,
    };

    const paths = {
      params,
      props,
    };

    return paths;
  });
}

const { post } = Astro.props;
const { body, data } = post;
const { Content } = await render(post);

const metaData = {
  metaTitle: data.metaTitle,
  metaDescription: data.metaDescription,
  ogImage: data.image.src,
};

const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "@id": Astro.url,
  headline: data.h1,
  author: {
    "@type": "Person",
    name: data.author.name,
  },
  datePublished: data.datePublished.toISOString(),
  dateModified: data.dateModified.toISOString(),
  potentialAction: [
    {
      "@type": "ReadAction",
      target: [Astro.url],
    },
  ],
  image: `${Astro.url.origin}/img/blog/${data.image}`,
  articleSection: "jiu jitsu",
  description: data.metaDescription,
  wordCount: data.wordCount,
  url: Astro.url,
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": Astro.url,
    name: data.h1,
  },
};
---

<Layout metaData={metaData} typePage="post">
  <PostLayout body={body} post={post}>
    <Content />
  </PostLayout>

  <script
    is:inline
    type="application/ld+json"
    set:html={JSON.stringify(structuredData)}
  />
</Layout>
